.TH SentryPeer 1 "December 2024" "SentryPeer"
.SH NAME
sentrypeer \- A distributed list of bad IP addresses and phone numbers collected via a SIP Honeypot

.SH SYNOPSIS
.B sentrypeer
[\-hVvjplfdrRaws]
.SH DESCRIPTION
.B SentryPeer
is a fraud detection tool. It lets bad actors try to make phone calls and saves the IP address they came
from and number they tried to call. Those details are then used to block them at the service providers network and the
next time a user/customer tries to call a collected number, it's blocked.

Traditionally this data is shipped to a central place, so you don't own the data you've collected. This project is all
about Peer to Peer sharing of that data. The user owning the data and various Service Provider / Network Provider
related feeds of the data is the key bit for me. I'm sick of all the services out there that keep it and sell it.
If you've collected it, you should have the choice to keep it and/or opt in to share it with other SentryPeer community
members via p2p methods.
.SH OPTIONS
.TP
\fB-f <DB_FILE>
Set 'sentrypeer.db' location or use SENTRYPEER_DB_FILE env
.TP
\fB-j
Enable json logging or use SENTRYPEER_JSON_LOG env
.TP
\fB-p                           
Enable Peer to Peer mode or use SENTRYPEER_PEER_TO_PEER env
.TP
\fB-b <BOOTSTRAP_NODE>          
Set Peer to Peer bootstrap node or use SENTRYPEER_BOOTSTRAP_NODE env
.TP
\fB-i <CLIENT_ID>               
Set OAuth 2 client ID or use SENTRYPEER_OAUTH2_CLIENT_ID env to get a Bearer token for WebHook
.TP
\fB-c <CLIENT_SECRET>           
Set OAuth 2 client secret or use SENTRYPEER_OAUTH2_CLIENT_SECRET env to get a Bearer token for WebHook
.TP
\fB-a                           
Enable RESTful API mode or use SENTRYPEER_API env
.TP
\fB-w <WEBHOOK_URL>             
Set WebHook URL for bad actor json POSTs or use SENTRYPEER_WEBHOOK_URL env
.TP
\fB-r                           
Enable SIP responsive mode or use SENTRYPEER_SIP_RESPONSIVE env
.TP
\fB-R                           
Disable SIP mode completely or use SENTRYPEER_SIP_DISABLE env
.TP
\fB-l <JSON_LOG_FILE>           
Set JSON logfile (default './sentrypeer_json.log') location or use SENTRYPEER_JSON_LOG_FILE env
.TP
\fB-N                           
Disable Rust powered TCP, UDP and TLS or use SENTRYPEER_TLS_DISABLE env
.TP
\fB-t <TLS_CERT_FILE>           
Set TLS cert location (default './cert.pem') or use SENTRYPEER_CERT env
.TP
\fB-k <TLS_KEY_FILE>            
Set TLS key location (default './key.pem') or use SENTRYPEER_KEY env
.TP
\fB-z <TLS_LISTEN_ADDRESS>      
Set TLS listen address (default '0.0.0.0:5061') or use SENTRYPEER_TLS_LISTEN_ADDRESS env
.TP
\fB-s                           
Enable syslog logging or use SENTRYPEER_SYSLOG env
.TP
\fB-v                           
Enable verbose logging or use SENTRYPEER_VERBOSE env
.TP
\fB-d                           
Enable debug mode or use SENTRYPEER_DEBUG env
.TP
\fB-h, --help                   
Print help
.TP
\fB-V, --version                
Print version
.SH USING SENTRYPEER
You can run SentryPeer via the console, use a Docker image via Docker Hub, build your own container with the Dockerfile
on GitHub or install a deb or rpm. It looks like you installed from source or a package if you're reading this :-) 
.SH BUGS
Issues and can be raised on the SentryPeer GitHub page:

<https://github.com/ghenry/SentryPeer/issues>

It's okay to raise an issue to ask a question.
.br
.SH SEE ALSO
<https://sentrypeer.org>
.SH LICENSE
Copyright (c) 2021 - 2024 Gavin Henry <ghenry@sentrypeer.org>
.br
License GPLv2 or GPLv3: GNU GPL version 2 or version 3 <https://www.gnu.org/licenses/gpl.html>
This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH AUTHORS/CREDITS
.B SentryPeer
was written by Gavin Henry
.B <ghenry@sentrypeer.org>
