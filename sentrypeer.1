.TH SentryPeer 1 "March 2022" "SentryPeer"
.SH NAME
sentrypeer \- A distributed list of bad IP addresses and phone numbers collected via a SIP Honeypot

.SH SYNOPSIS
.B sentrypeer
[\-hVvjlfdraws]
.SH DESCRIPTION
.B SentryPeer
is basically a fraud detection tool. It lets bad actors try to make phone calls and saves the IP address they came
from and number they tried to call. Those details are then used to block them at the service providers network and the
next time a user/customer tries to call a collected number, it's blocked.

Traditionally this data is shipped to a central place, so you don't own the data you've collected. This project is all
about Peer to Peer sharing of that data. The user owning the data and various Service Provider / Network Provider
related feeds of the data is the key bit for me. I'm sick of all the services out there that keep it and sell it.
If you've collected it, you should have the choice to keep it and/or opt in to share it with other SentryPeer community
members via p2p methods.
.SH OPTIONS
.TP
.BI "-h
Shows the help screen
.TP
.BI "\-V
shows the version of SentryPeer
.TP
.BI "\-f
Set 'sentrypeer.db' location or set SENTRYPEER_DB_FILE environment variable
.TP
.BI "\-j
Enable json logging or use SENTRYPEER_JSON_LOG environment variable
.TP
.BI "\-a
Runs SentryPeer with the RESTful API or set SENTRYPEER_API=1 environment variable
.TP
.BI "\-r
Runs SentryPeer in SIP responsive mode or set SENTRYPEER_SIP_RESPONSIVE=1 environment variable. Enables replies to SIP
probes to prompt INVITEs and actual attacks
.TP
.BI "\-l
Set 'sentrypeer_json.log' location or use SENTRYPEER_JSON_LOG_FILE environment variable
.TP
.BI "\-s
Runs SentryPeer with syslog logging or set SENTRYPEER_SYSLOG=1 environment variable. Allows Fail2ban to use SentryPeer
to block IP addresses
.TP
.BI "\-v
Runs SentryPeer in verbose mode or set SENTRYPEER_VERBOSE=1 environment variable
.TP
.BI "\-w
Runs SentryPeer with the Web GUI enabled or set SENTRYPEER_WEB_GUI=1 environment variable
.TP
.BI "-d
Runs SentryPeer in debug mode (preferred method at the moment) or set SENTRYPEER_DEBUG=1 environment variable
.SH USING SENTRYPEER
You can run SentryPeer via the console, use a Docker image via Docker Hub, build your own container with the Dockerfile
on GitHub or install a deb or rpm. It looks like you installed from source or a package if you're reading this :-) Peer
to Peer is the next step.
.SH BUGS
Issues and can be raised on the SentryPeer GitHub page:

<https://github.com/ghenry/SentryPeer/issues>

It's okay to raise an issue to ask a question.
.br
.SH SEE ALSO
<https://sentrypeer.org>
.SH LICENSE
Copyright (c) 2021 - 2022 Gavin Henry <ghenry@sentrypeer.org>
.br
License GPLv2 or GPLv3: GNU GPL version 2 or version 3 <https://www.gnu.org/licenses/gpl.html>
This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH AUTHORS/CREDITS
.B SentryPeer
was written by Gavin Henry
.B <ghenry@sentrypeer.org>
