# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only
# Copyright (c) 2021 - 2022 Gavin Henry <ghenry@sentrypeer.org>

name: Build and Test
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
jobs:
  build_and_test:
    name: Autotools build on ${{matrix.os}} using ${{matrix.cc}} ${{matrix.posix}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-11]
        cc: [gcc, clang]
    env:
      CC: ${{ matrix.cc }}
    steps:
      - uses: actions/checkout@v2
      - name: Fetch Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            set -x
            sudo apt-get update
            sudo apt-get -y upgrade
            sudo apt-get install \
            autoconf-archive \
            libosip2-dev \
            libcmocka-dev \
            uuid-dev \
            libjansson-dev \
            libcurl4-openssl-dev \
            libpcre2-dev -y
            brew update
            brew upgrade
            brew install cmocka libosip opendht
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            set -x
            brew update
            brew upgrade
            brew install automake
            brew install autoconf-archive
            brew install libosip
            brew install jansson
            brew install libmicrohttpd
            brew install curl
            brew install cmocka
            brew install pcre2
            brew install opendht
          fi
      - name: Build and Clean
        run: |
          set -x
          ./bootstrap.sh
          ./configure
          make
          make check || (cat ./test-suite.log; false)
          ./sentrypeer -V
          make distcheck
          make clean

# TODO: cmake
# https://github.com/maxmind/libmaxminddb/blob/main/.github/workflows/test.yml
#  cmake_build_and_test:
#    strategy:
#      matrix:
#        os: [ubuntu-latest, macos-latest]
#    name: CMake build on ${{matrix.os}}
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v2
#      - run: cmake -DBUILD_TESTING=ON .
#      - run: cmake --build .
#      - run: ctest -V .
