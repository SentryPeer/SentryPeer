# SPDX-License-Identifier: GPL-2.0-only OR GPL-3.0-only
# Copyright (c) 2021 - 2024 Gavin Henry <ghenry@sentrypeer.org>

name: Build and Test
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  test-autotools:
    name: Autotools build on ${{matrix.os}} using ${{matrix.cc}} ${{matrix.posix}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-14 ]
        cc: [ gcc, clang ]
    env:
      CC: ${{ matrix.cc }}
    steps:
      - name: Add Homebrew to $PATH
        run: echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH

      - name: Test brew call
        run: brew search hello
      - uses: actions/checkout@v2
      - name: Fetch Dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            set -x
            sudo apt-get update
            sudo echo RESET grub-efi/install_devices | sudo debconf-communicate grub-pc
            sudo apt-get -y upgrade
            sudo apt-get install \
            pkg-config \
            autoconf-archive \
            libosip2-dev \
            libcmocka-dev \
            uuid-dev \
            libmicrohttpd-dev \
            libjansson-dev \
            libcurl4-openssl-dev \
            libpcre2-dev -y
            brew update
            brew upgrade
            brew install cmocka libosip opendht
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            set -x
            brew update
            brew upgrade || true
            brew install pkg-config
            brew install automake
            brew install autoconf-archive
            brew install libosip
            brew install jansson
            brew install libmicrohttpd
            brew install curl
            brew install cmocka
            brew install pcre2
            brew install opendht
            brew install ossp-uuid
          fi
      - name: Build and Clean
        run: |
          set -x
          ./bootstrap.sh
          ./configure
          make
          make check || (cat ./test-suite.log; false)
          ./sentrypeer -V
          # Leave this out for now. We've tried:
          # https://github.com/rust-lang/rust-bindgen/issues/2930
          # https://users.rust-lang.org/t/make-distcheck-vpath-and-autotools-vars-in-build-rs/117502/1
          # https://stackoverflow.com/questions/75722074/how-to-do-autotools-vpath-builds-with-rust/78981344#78981344
          # make distcheck
          make dist
          make clean
          make distclean
